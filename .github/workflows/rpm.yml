name: Build RPMs and submit to COPR

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    # Specify the runner
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        fedora_version: [41, 42, 43]

    # Run the job inside a Fedora container
    container:
      image: fedora:${{ matrix.fedora_version }}

    steps:
      # Checkout the repository
      - name: Checkout the repository
        uses: actions/checkout@v3

      # Install Required Packages
      - name: Install Required Packages
        run: |
          # Update the package index
          dnf -y update

          # Install RPM build tools and dependencies
          dnf install -y rpm-build rpmdevtools dnf-plugins-core copr-cli

          # Install 'builddep' command for DNF
          dnf install -y 'dnf-command(builddep)'

          # Set up RPM build environment
          rpmdev-setuptree

      # Copy Spec and Source Files
      - name: Copy Spec and Source Files
        run: |
          # Copy xremap.spec to SPECS directory
          cp xremap.spec ~/rpmbuild/SPECS/

          # Copy 00-xremap-input.rules to SOURCES directory
          cp 00-xremap-input.rules ~/rpmbuild/SOURCES/

      # Download the Source Tarball
      - name: Download Source Tarball
        run: |
          cd ~/rpmbuild/SPECS

          # Download sources defined in the spec file
          spectool -g -R xremap.spec

      # Build the SRPM
      - name: Build the Source RPM (SRPM)
        run: |
          cd ~/rpmbuild/SPECS

          # Build the SRPM
          rpmbuild -bs xremap.spec

      # Upload SRPM as Artifact
      - name: Upload SRPM
        uses: actions/upload-artifact@v4
        with:
          name: srpm-fedora-${{ matrix.fedora_version }}
          path: |
            ~/rpmbuild/SRPMS/*.src.rpm

      - name: Install build dependencies
        run: |
          cd ~/rpmbuild/SPECS
          dnf builddep -y xremap.spec

      - name: Build RPM packages locally
        run: |
          cd ~/rpmbuild/SPECS
          
          # Build all RPM variants
          rpmbuild -bb xremap.spec
          
          # List built RPMs
          ls -la ~/rpmbuild/RPMS/*/

      # Upload Binary RPMs as Artifact
      - name: Upload Binary RPMs
        uses: actions/upload-artifact@v4
        with:
          name: rpms-fedora-${{ matrix.fedora_version }}
          path: |
            ~/rpmbuild/RPMS/*/*.rpm

  submit-to-copr:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: fedora:43

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Install Required Packages
        run: |
          dnf -y update
          dnf install -y rpm-build rpmdevtools dnf-plugins-core copr-cli
          dnf install -y 'dnf-command(builddep)'
          rpmdev-setuptree

      - name: Copy Spec and Source Files
        run: |
          cp xremap.spec ~/rpmbuild/SPECS/
          cp 00-xremap-input.rules ~/rpmbuild/SOURCES/

      - name: Download Source Tarball
        run: |
          cd ~/rpmbuild/SPECS
          spectool -g -R xremap.spec

      - name: Build the Source RPM (SRPM)
        run: |
          cd ~/rpmbuild/SPECS
          rpmbuild -bs xremap.spec

      - name: Configure copr-cli
        run: |
          mkdir -p ~/.config
          echo "[copr-cli]" > ~/.config/copr
          echo "login = ${{ secrets.COPR_LOGIN }}" >> ~/.config/copr
          echo "username = blakegardner" >> ~/.config/copr
          echo "token = ${{ secrets.COPR_TOKEN }}" >> ~/.config/copr
          echo "copr_url = https://copr.fedorainfracloud.org" >> ~/.config/copr

      - name: Submit Source RPM to COPR
        run: |
          copr-cli build blakegardner/xremap ~/rpmbuild/SRPMS/xremap-*.src.rpm

  upload-to-release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Upload RPMs to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/*/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
